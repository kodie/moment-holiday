{"version":3,"sources":["moment-holiday.js"],"names":["moment","require","parserExtensions","parseHoliday","self","date","adjust","pd","days","i","length","pe","isMoment","charAt","match","range","dates","split","m","ds","td","ii","push","year","parseInt","month","w","slice","wd","dt","d","startOf","limit","endOf","diff","wds","forward","wi","day","add","subtract","ai","concat","di","arrayify","keywordMatches","str","kw","f","RegExp","findHoliday","holiday","parse","holidayObj","pt","wn","obj","h","holidays","active","hasOwnProperty","fk","findKey","hd","filter","keywords_n","keywords_y","matchesY","keywords","matches","Object","keys","findHolidays","find","merge","getAllHolidays","getLocale","locale","regions","toLowerCase","replace","shift","e","o","r","l","y","n","regions_n","join","indexOf","compileRegions","holidayLoop","count","b","b2","ha","hi","isSame","arr","constructor","Array","o1","o2","assign","fn","single","this","dKeys","isHoliday","returnTitle","hs","previousHoliday","previousHolidays","nextHoliday","nextHolidays","holidaysBetween","Date","active_last","modifyHolidays","set","specifics","newH","k","is","remove","undo","c","load","locales","extendParser","func","module","exports","call"],"mappings":"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","file":"moment-holiday.min.js","sourcesContent":["//! moment-holiday.js\n//! version : 1.5.1\n//! author : Kodie Grantham\n//! license : MIT\n//! https://github.com/kodie/moment-holiday\n\n(function () {\n  var moment = require('moment');\n\n  var parserExtensions = [];\n\n  var parseHoliday = function (self, date, adjust) {\n    var days = [], pd;\n\n    for (var i = 0; i < parserExtensions.length; i++) {\n      var pe = parserExtensions[i](self, date);\n      if (pe || pe === false) { pd = pe; }\n    }\n\n    if (pd === false) { return false; }\n    if (typeof pd === 'string') { date = pd; } else if (pd) { days = pd; }\n\n    if (!moment.isMoment(days) && !days.length && date.charAt(0).match(/[0-9(]/)) {\n      var range = false;\n      var dates = date.split('|');\n\n      if (dates.length > 1) { range = true; }\n      if (dates.length > 2) { dates = [dates[0], dates[1]]; }\n\n      for (var i = 0; i < dates.length; i++) {\n        var m = moment(self);\n        var ds = dates[i].split('/');\n\n        if (ds.length === 1 || (ds.length === 2 && ds[1].charAt(0) !== '(' && ds[1].length === 4)) {\n          var td = dates[i];\n          i = -1;\n          dates = [];\n          for (var ii = 1; ii < 13; ii++) { dates.push(ii + '/' + td); }\n          continue;\n        }\n\n        if (ds.length > 2) { m.year(parseInt(ds[2])); }\n\n        m.month((parseInt(ds[0]) - 1));\n\n        if (ds[1].charAt(0) === '(') {\n          var w = ds[1].slice(1, -1).split(',');\n          var wd = parseInt(w[0]);\n          var dt = parseInt(w[1]);\n          var d = moment(m).startOf('month');\n          var limit = (moment(m).endOf('month').diff(d, 'days') + 1);\n          var wds = [];\n\n          if (w[1] && w[1].charAt(0) === '[') {\n            var forward = true;\n            dt = parseInt(w[1].slice(1, -1));\n\n            if (dt < 0) {\n              forward = false;\n              dt = parseInt(w[1].slice(2, -1));\n            }\n\n            d = moment(m).date(dt);\n\n            for (var wi = 0; wi < 7; wi++) {\n              if (d.day() === wd) { days.push(moment(d)); break; }\n\n              if (forward) {\n                d.add(1, 'day');\n              } else {\n                d.subtract(1, 'day');\n              }\n            }\n\n            continue;\n          }\n\n          for (var ai = 0; ai < limit; ai++) {\n            if (d.day() === wd) { wds.push(moment(d)); }\n            d.add(1, 'day');\n          }\n\n          if (!dt) {\n            days = days.concat(wds);\n            continue;\n          } else if (dt < 0) {\n            m = wds[wds.length + dt];\n          } else {\n            m = wds[dt - 1];\n          }\n\n          days.push(m);\n        } else {\n          days.push(m.date(ds[1]));\n        }\n      }\n\n      if (range && days.length > 1) {\n        var diff = days[1].diff(days[0], 'days');\n\n        if (diff > 1) {\n          var di = moment(days[0]);\n          days = [days[0]];\n\n          for (var i = 0; i < diff; i++) {\n            di.add(1, 'day');\n            days.push(moment(di));\n          }\n        }\n      }\n    }\n\n    days = arrayify(days);\n\n    for (var i = 0; i < days.length; i++) {\n      if (!moment.isMoment(days[i])) { delete (days[i]); continue; }\n\n      if (adjust) {\n        if (days[i].day() === 0) { days[i] = days[i].add(1, 'day'); }\n        if (days[i].day() === 6) { days[i] = days[i].subtract(1, 'day'); }\n      }\n\n      days[i] = days[i].startOf('day');\n    }\n\n    if (!days.length) { return false; }\n    if (days.length === 1) { return days[0]; }\n\n    return days;\n  };\n\n  var keywordMatches = function (str, kw) {\n    var m = [];\n    kw = arrayify(kw);\n\n    for (var i = 0; i < kw.length; i++) {\n      var f = str.match(new RegExp(kw[i], 'gi'));\n      if (f) { m = m.concat(f); }\n    }\n\n    return m;\n  };\n\n  var findHoliday = function (self, holiday, adjust, parse, holidayObj) {\n    var pt = {};\n    var wn = [];\n    var obj = {};\n\n    h = holidayObj || moment.holidays.active;\n\n    if (h.hasOwnProperty(holiday)) {\n      wn.push(holiday);\n    } else if (fk = findKey(holiday, h)) {\n      wn.push(fk);\n    } else {\n      for (var hd in h) {\n        if (!h.hasOwnProperty(hd)) { continue; }\n\n        pt[hd] = keywordMatches(holiday, hd.split(/[\\s,.-]+/).filter(function (w) { return w.length > 2; })).length;\n\n        if (h[hd].keywords_n) {\n          var matchesN = keywordMatches(holiday, h[hd].keywords_n);\n          if (matchesN.length) {\n            pt[hd] = 0;\n            continue;\n          }\n        }\n\n        if (h[hd].keywords_y) {\n          var matchesY = keywordMatches(holiday, h[hd].keywords_y);\n          if (matchesY && matchesY.length === h[hd].keywords_y.length) {\n            pt[hd] += matchesY.length;\n          } else {\n            pt[hd] = 0;\n            continue;\n          }\n        }\n\n        if (h[hd].keywords) {\n          var matches = keywordMatches(holiday, h[hd].keywords);\n          if (matches) {\n            pt[hd] += matches.length;\n          } else {\n            continue;\n          }\n        }\n      }\n\n      //console.log(pt); // Display scores\n\n      for (var w in pt) {\n        if (!pt[w] || !pt.hasOwnProperty(w)) { continue; }\n        if (!wn.length || pt[w] === pt[wn[0]]) { wn.push(w); continue; }\n        if (pt[w] > pt[wn[0]]) { wn = [w]; continue; }\n      }\n    }\n\n    if (!wn.length) { return false; }\n\n    if (parse !== false) {\n      for (var i = 0; i < wn.length; i++) {\n        var d = parseHoliday(self, h[wn[i]].date, adjust);\n        if (d) { obj[wn[i]] = d; }\n      }\n\n      if (Object.keys(obj).length) { return obj; }\n    } else {\n      return wn;\n    }\n\n    return false;\n  };\n\n  var findHolidays = function (self, holidays, adjust, parse, holidayObj) {\n    var h = [];\n    if (parse) { h = {}; }\n\n    holidays = arrayify(holidays);\n    if (!holidayObj) { holidayObj = moment.holidays.active; }\n\n    for (var i = 0; i < holidays.length; i++) {\n      var find = findHoliday(self, holidays[i], adjust, parse, holidayObj);\n\n      if (find) {\n        if (parse) {\n          h = merge(h, find);\n        } else {\n          h = h.concat(find);\n        }\n      }\n    }\n\n    return h;\n  };\n\n  var getAllHolidays = function (self, adjust) {\n    var h = moment.holidays.active;\n    var d = {};\n\n    for (var hd in h) {\n      if (!h.hasOwnProperty(hd)) { continue; }\n      if (td = parseHoliday(self, h[hd].date, adjust)) { d[hd] = td; }\n    }\n\n    return d;\n  };\n\n  var compileRegions = function (locale, regions) {\n    var h = moment.holidays[locale];\n    var o = {};\n\n    if (h) {\n      for (var i = 0; i < regions.length; i++) {\n        var r = regions[i].toLowerCase();\n        var l = moment.holidays[locale + '/' + r];\n        l = {};\n\n        for (var hd in h) {\n          if (!h.hasOwnProperty(hd)) { continue; }\n\n          var y = h[hd].regions || [];\n          var n = h[hd].regions_n || [];\n\n          if (y.length) { y.join().toLowerCase().split(); }\n          if (n.length) { n.join().toLowerCase().split(); }\n\n          if ((!y.length && !n.length) || (y.length && ~y.indexOf(r)) || (n.length && !~n.indexOf(r))) {\n            l[hd] = h[hd];\n          }\n        }\n\n        if (l) { o = merge(o, l); }\n      }\n    }\n\n    if (!Object.keys(o).length) { return false; }\n\n    return o;\n  };\n\n  var getLocale = function (locale) {\n    regions = locale.split('/');\n    locale = regions[0].toLowerCase().replace(' ', '_');\n    regions.shift();\n\n    if (!moment.holidays[locale]) {\n      try {\n        require('../locale/' + locale);\n      } catch (e) { }\n    }\n\n    if (moment.holidays[locale]) {\n      if (regions.length) { return compileRegions(locale, regions); }\n      return moment.holidays[locale];\n    }\n\n    return false;\n  };\n\n  var holidayLoop = function (self, count, forward, adjust) {\n    if (!count) { count = 1; }\n\n    var h = getAllHolidays(self, adjust);\n    var l = moment(self);\n    var y = self.year();\n    var w = [];\n\n    for (var i = 0; i < count; i++) {\n      var d = moment(l);\n\n      while (true) {\n        var b = false;\n\n        if (forward) {\n          d.add(1, 'day');\n        } else {\n          d.subtract(1, 'day');\n        }\n\n        if (d.year() !== y) {\n          h = getAllHolidays(d, adjust);\n          y = d.year();\n        }\n\n        if (!Object.keys(h).length) { b = true; break; }\n\n        for (var hd in h) {\n          if (!h.hasOwnProperty(hd)) { continue; }\n\n          var b2 = false;\n          var ha = arrayify(h[hd]);\n\n          for (var hi = 0; hi < ha.length; hi++) {\n            if (d.isSame(ha[hi], 'day')) {\n              w.push(ha[hi]);\n              l = moment(d);\n              b2 = true;\n              break;\n            }\n          }\n\n          if (b2) { b = true; break; }\n        }\n\n        if (b) { break; }\n      }\n    }\n\n    if (!w.length) { return false; }\n    if (w.length === 1) { return w[0]; }\n\n    return w;\n  };\n\n  var arrayify = function (arr) {\n    if (arr && arr.constructor !== Array) { return [arr]; }\n    return arr;\n  };\n\n  var findKey = function (find, obj) {\n    if (obj.constructor === Object) { obj = Object.keys(obj); }\n    for (var i = 0; i < obj.length; i++) {\n      if (find.toLowerCase() === obj[i].toLowerCase()) { return obj[i]; }\n    }\n    return false;\n  };\n\n  var merge = function (o1, o2) {\n    return Object.assign({}, o1, o2);\n  };\n\n  moment.fn.holiday = function (holidays, adjust) {\n    var h = moment.holidays.active;\n    var d = {};\n    var single = false;\n\n    if (!holidays) {\n      d = getAllHolidays(this, adjust);\n    } else {\n      if (holidays.constructor !== Array) {\n        single = true;\n        holidays = [holidays];\n      }\n\n      for (var i = 0; i < holidays.length; i++) {\n        if (td = findHoliday(this, holidays[i], adjust)) { d = Object.assign({}, d, td); }\n      }\n    }\n\n    var dKeys = Object.keys(d);\n\n    if (!dKeys.length) { return false; }\n    if (dKeys.length === 1 && single) { return d[dKeys[0]]; }\n\n    return d;\n  };\n\n  moment.fn.holidays = function (holidays, adjust) {\n    return this.holiday(holidays, adjust);\n  };\n\n  moment.fn.isHoliday = function (holidays, adjust) {\n    var h, returnTitle, hs = [];\n\n    if (holidays) {\n      holidays = arrayify(holidays);\n      h = this.holiday(holidays, adjust);\n      returnTitle = false;\n    } else {\n      h = getAllHolidays(this, adjust);\n      returnTitle = true;\n    }\n\n    if (!h) { return false; }\n\n    for (var hd in h) {\n      if (!h.hasOwnProperty(hd)) { continue; }\n\n      var ha = arrayify(h[hd]);\n\n      for (var hi = 0; hi < ha.length; hi++) {\n        if (this.isSame(ha[hi], 'day')) {\n          if (returnTitle) {\n            hs.push(hd);\n          } else {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (hs.length) {\n      if (hs.length === 1) { return hs[0]; }\n      return hs;\n    }\n\n    return false;\n  };\n\n  moment.fn.previousHoliday = function (count, adjust) {\n    return holidayLoop(this, count, false, adjust);\n  };\n\n  moment.fn.previousHolidays = function (count, adjust) {\n    return this.previousHoliday(count, adjust);\n  };\n\n  moment.fn.nextHoliday = function (count, adjust) {\n    return holidayLoop(this, count, true, adjust);\n  };\n\n  moment.fn.nextHolidays = function (count, adjust) {\n    return this.nextHoliday(count, adjust);\n  };\n\n  moment.fn.holidaysBetween = function (date, adjust) {\n    if (!date) { date = new Date(); }\n    date = moment(date).subtract(1, 'day');\n\n    var h = getAllHolidays(this, adjust);\n    var d = moment(this);\n    var y = d.year();\n    var w = [];\n\n    for (var i = 0; i < date.diff(this, 'days'); i++) {\n      d.add(1, 'day');\n\n      if (d.year() !== y) {\n        h = getAllHolidays(d, adjust);\n        y = d.year();\n      }\n\n      if (!Object.keys(h).length) { break; }\n\n      for (var hd in h) {\n        var b = false;\n        var ha = arrayify(h[hd]);\n\n        for (var hi = 0; hi < ha.length; hi++) {\n          if (d.isSame(ha[hi], 'day')) {\n            w.push(ha[hi]);\n            b = true;\n            break;\n          }\n        }\n\n        if (b) { break; }\n      }\n    }\n\n    if (!w.length) { return false; }\n\n    return w;\n  };\n\n  moment.holidays = {\n    active: {},\n    active_last: {}\n  };\n\n  moment.modifyHolidays = {\n    set: function (holidays, specifics) {\n      var newH = {};\n\n      if (holidays.constructor === Array) {\n        var hs = [];\n\n        for (var i = 0; i < holidays.length; i++) {\n          var d = findHoliday(this, holidays[i], null, false);\n          if (d) { hs = hs.concat(d); }\n        }\n\n        if (hs.length) {\n          newH = merge(moment.holidays.active);\n\n          for (var hd in newH) {\n            if (!newH.hasOwnProperty(hd)) { continue; }\n            if (!~hs.indexOf(hd)) { delete (newH[hd]); }\n          }\n        }\n      } else if (typeof holidays === 'string') {\n        var locale = getLocale(holidays);\n\n        if (locale) {\n          if (specifics) {\n            var k = findHolidays(this, specifics, false, false, locale);\n            for (var i = 0; i < k.length; i++) { newH[k[i]] = merge(locale[k[i]]); }\n          } else {\n            newH = merge(locale);\n          }\n        }\n      } else {\n        newH = holidays;\n      }\n\n      if ((Object.keys(newH).length || holidays === newH) && !Object.is(moment.holidays.active, newH)) {\n        moment.holidays.active_last = merge(moment.holidays.active);\n        moment.holidays.active = newH;\n      }\n\n      return this;\n    },\n\n    add: function (holidays, specifics) {\n      if (typeof holidays === 'string') {\n        var locale = getLocale(holidays);\n        holidays = {};\n\n        if (locale) {\n          if (specifics) {\n            var k = findHolidays(this, specifics, false, false, locale);\n            for (var i = 0; i < k.length; i++) { holidays[k[i]] = merge(locale[k[i]]); }\n          } else {\n            holidays = locale;\n          }\n        }\n      }\n\n      if (Object.keys(holidays).length) {\n        moment.holidays.active_last = merge(moment.holidays.active);\n        moment.holidays.active = merge(moment.holidays.active, holidays);\n      }\n\n      return this;\n    },\n\n    remove: function (holidays) {\n      holidays = arrayify(holidays);\n\n      var find = findHolidays(this, holidays, false, false);\n      var newH = merge(moment.holidays.active);\n\n      if (find) {\n        for (var i = 0; i < find.length; i++) { delete (newH[find[i]]); }\n      }\n\n      if (!Object.is(moment.holidays.active, newH)) {\n        moment.holidays.active_last = merge(moment.holidays.active);\n        moment.holidays.active = newH;\n      }\n\n      return this;\n    },\n\n    undo: function () {\n      var c = merge(moment.holidays.active);\n      moment.holidays.active = merge(moment.holidays.active_last);\n      moment.holidays.active_last = c;\n      return this;\n    },\n\n    load: function (locales) {\n      locales = arrayify(locales);\n      for (var i = 0; i < locales.length; i++) { getLocale(locales[i]); }\n      return this;\n    },\n\n    extendParser: function (func) {\n      parserExtensions.push(func);\n      return this;\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n"]}