{"version":3,"sources":["moment-holiday.js","argentina.js","australia.js","canada.js","colombia.js","croatia.js","denmark.js","easter.js","finland.js","germany.js","ghana.js","india.js","japan.js","nigeria.js","russia.js","switzerland.js","united_kingdom.js","united_states.js"],"names":["moment","require","amd","this","parserExtensions","parseHoliday","self","date","adjust","pd","days","i","length","pe","isMoment","charAt","match","range","dates","split","m","ds","td","ii","push","year","parseInt","month","w","slice","wd","dt","d","startOf","limit","endOf","diff","wds","forward","wi","day","add","subtract","ai","concat","di","arrayify","keywordMatches","str","kw","f","RegExp","findHoliday","holiday","parse","holidayObj","pt","wn","obj","h","holidays","active","hasOwnProperty","fk","findKey","hd","filter","keywords_n","keywords_y","matchesY","keywords","matches","Object","keys","findHolidays","find","merge","getAllHolidays","getLocale","locale","regions","toLowerCase","replace","shift","path","__dirname","pop","e","o","r","l","y","n","regions_n","join","indexOf","compileRegions","holidayLoop","count","b","b2","ha","hi","isSame","arr","constructor","Array","o1","o2","assign","fn","single","dKeys","isHoliday","returnTitle","hs","previousHoliday","previousHolidays","nextHoliday","nextHolidays","holidaysBetween","Date","active_last","modifyHolidays","set","specifics","newH","k","is","remove","undo","c","load","locales","extendParser","func","module","exports","call","argentina","Año Nuevo","Lunes de Carnival","Martes de Carnival","Día de la Memoria por la Verdad y la Justicia","Día del Veterano de Guerra y los Caídos en las Islas Malvinas","Jueves Santo","Viernes Santo","Día de Acción por la tolerancia y el respeto entre los pueblos","Día del Trabajador","Día de la Revolución de Mayo","Día Paso a la Inmortalidad del Gral. Manual Belgrano","Día de la Independencia","Paso a la Inmortalidad del Gral. José de San Martín","Día del Respeto a la Diversidad Cultural","Día de la Soberanía Nacional","Navidad","australia","New Year's Day","Australia Day","Labour Day - WA","Adelaide Cup","Canberra Day","Labour Day - VIC","Eight Hours Day","Good Friday","Holy Saturday","Easter Sunday","Easter Monday","Anzac Day","Labour Day - QLD, NT","Reconciliation Day","Western Australia Day","Queens Birthday","Picnic Day","Queens Birthday - WA","Grand Final Eve","Labour Day - ACT, NSW, SA","Queens Birthday - QLD","Melbourne Cup Day","Christmas Day","Boxing Day","Proclamation Day","isSaturday","format","canada","Valentine's Day","Islander Day","Family Day","Louis Riel Day","Saint Patrick's Day","Victoria Day","Mother's Day","Father's Day","Aboriginal Day","Saint Jean Baptiste Day","Canada Day","Civic Day","Labour Day","Halloween","Remembrance Day","Thanksgiving Day","colombia","Día de los Reyes Magos","Día de San José","Día del Trabajo","Día de la Ascensión","Corpus Christi","Sagrado Corazón","San Pedro y San Pablo","Batalla de Boyacá","La asunción de la Virgen ","Día de la Raza","Todos los Santos ","Independencia de Cartagena","Día de la Inmaculada Concepción ","Día de Navidad ","croatia","Nova Godina","Bogojavljenje","Uskrs","Uskrsni ponedjeljak","Praznik rada","Tijelovo","Dan antifašističke borbe","Dan državnosti","Dan zahvalnosti","Velika Gospa","Dan neovisnosti","Dan svih svetih","Božić","Sveti Stjepan","denmark","Nytårsdag","Skærfredag","Påske","Anden påskedag","Første maj","Kristi himmelfart","kaywords","Pinse","Anden pinse","Juleaften","Anden juledag","easter","Ash Wednesday","Lent","Maundy Thursday","Ascension Day","Pentecost Sunday","Whit Monday","Math","floor","j","substring","finland","Uudenvuodenpäivä","Loppiainen","Vappu","Juhannuspäivä","Pyhäinpäivä","Joulupäivä","Tapaninpäivä","Pitkäperjantai","Pääsiäispäivä","Toinen Pääsiäispäivä","Helatorstai","germany","Neujahrstag","Karfreitag","Ostersonntag","Ostermontag","Heilige Drei Könige","Maifeiertag","Christi Himmelfahrt","Pfingstsonntag","Pfingstmontag","Fronleichnam","Mariä Himmelfahrt","Tag der deutschen Einheit","Reformationstag","Allerheiligen","Buß- und Bettag","Weihnachten","Zweiter Weihnachtsfeiertag","ghana","New Year's Holiday","Independence Day","African Unity Day","Eid ul-Fitr","Republic Day","Eidul-Adha","Founders Day","Farmer's Day","india","Mahavir Jayanti","May Day","Gandhi Jayanti","japan","Gantan","Seijin no hi","Kenkoku kinen no hi","Shunbun no hi","Showa no hi","Kenpou kinenbi","Midori no hi","Kodomo no hi","Umi no hi","Yama no hi","Keiro no hi","Shubun no hi","Taiiku no hi","Bunka no hi","Rodo kansha no hi","Tennou tanjoubi","nigeria","Women's Day","Dr. Samuel Memorial Day","Worker's Day","Children's Day","Democracy Day","Eid-el-fitri Sallah","Sallah Holiday","Sallah Holidays","Id el Kabir","russia","New Year and Christmas Holidays","Defender's Day","Victory Day","Russia Day","National Unity Day","New Year","switzerland","Berchtoldstag","Dreikönigstag","Ausrufung Republik Neuenburg","Josephstag","Näfelser Fahrt","Tag der Arbeit","Auffahrt","Unabhängigkeitsfest Jura","St. Peter und Paul","Bundesfeiertag","Genfer Bettag","Eidg. Dank-, Buss- und Bettag","Bettagsmontag","Mauritiustag","Bruderklausenfest","Mariä Empfängnis","Weihnachtstag","Stephanstag","Wiederherstellung Republik Genf","united_kingdom","Saint David's Day","Mothering Sunday","Saint George's Day","Early May Bank Holiday","Spring Bank Holiday","Queen's Birthday","Battle of the Boyne","Summer Bank Holiday (Scotland)","Summer Bank Holiday","Guy Fawks Day","Saint Andrews Day","united_states","Martin Luther King Jr. Day","Washington's Birthday","Memorial Day","Labor Day","Columbus Day","Veteran's Day","Day after Thanksgiving","Christmas Eve","New Year's Eve"],"mappings":"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","file":"moment-holiday-pkg.min.js","sourcesContent":["//! moment-holiday.js\n//! version : 1.5.1\n//! author : Kodie Grantham\n//! license : MIT\n//! https://github.com/kodie/moment-holiday\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  var parserExtensions = [];\n\n  var parseHoliday = function(self, date, adjust) {\n    var days = [], pd;\n\n    for (var i = 0; i < parserExtensions.length; i++) {\n      var pe = parserExtensions[i](self, date, adjust);\n      if (pe || pe === false) { pd = pe; }\n    }\n\n    if (pd === false) { return false; }\n    if (typeof pd === 'string') { date = pd; } else if (pd) { days = pd; }\n\n    if (!moment.isMoment(days) && !days.length && date.charAt(0).match(/[0-9(]/)) {\n      var range = false;\n      var dates = date.split('|');\n\n      if (dates.length > 1) { range = true; }\n      if (dates.length > 2) { dates = [dates[0], dates[1]]; }\n\n      for (var i = 0; i < dates.length; i++) {\n        var m = moment(self);\n        var ds = dates[i].split('/');\n\n        if (ds.length === 1 || (ds.length === 2 && ds[1].charAt(0) !== '(' && ds[1].length === 4)) {\n          var td = dates[i];\n          i = -1;\n          dates = [];\n          for (var ii = 1; ii < 13; ii++) { dates.push(ii + '/' + td); }\n          continue;\n        }\n\n        if (ds.length > 2) { m.year(parseInt(ds[2])); }\n\n        m.month((parseInt(ds[0]) - 1));\n\n        if (ds[1].charAt(0) === '(') {\n          var w = ds[1].slice(1, -1).split(',');\n          var wd = parseInt(w[0]);\n          var dt = parseInt(w[1]);\n          var d = moment(m).startOf('month');\n          var limit = (moment(m).endOf('month').diff(d, 'days') + 1);\n          var wds = [];\n\n          if (w[1] && w[1].charAt(0) === '[') {\n            var forward = true;\n            dt = parseInt(w[1].slice(1, -1));\n\n            if (dt < 0) {\n              forward = false;\n              dt = parseInt(w[1].slice(2, -1));\n            }\n\n            d = moment(m).date(dt);\n\n            for (var wi = 0; wi < 7; wi++) {\n              if (d.day() === wd) { days.push(moment(d)); break; }\n\n              if (forward) {\n                d.add(1, 'day');\n              } else {\n                d.subtract(1, 'day');\n              }\n            }\n\n            continue;\n          }\n\n          for (var ai = 0; ai < limit; ai++) {\n            if (d.day() === wd) { wds.push(moment(d)); }\n            d.add(1, 'day');\n          }\n\n          if (!dt) {\n            days = days.concat(wds);\n            continue;\n          } else if (dt < 0) {\n            m = wds[wds.length + dt];\n          } else {\n            m = wds[dt - 1];\n          }\n\n          days.push(m);\n        } else {\n          days.push(m.date(ds[1]));\n        }\n      }\n\n      if (range && days.length > 1) {\n        var diff = days[1].diff(days[0], 'days');\n\n        if (diff > 1) {\n          var di = moment(days[0]);\n          days = [days[0]];\n\n          for (var i = 0; i < diff; i++) {\n            di.add(1, 'day');\n            days.push(moment(di));\n          }\n        }\n      }\n    }\n\n    days = arrayify(days);\n\n    for (var i = 0; i < days.length; i++) {\n      if (!moment.isMoment(days[i])) { delete(days[i]); continue; }\n\n      if (adjust) {\n        if (adjust === 'forward') {\n          if (days[i].day() === 0) { days[i] = days[i].add(1, 'day'); }\n          if (days[i].day() === 6) { days[i] = days[i].add(2, 'day'); }\n        } else {\n          if (days[i].day() === 0) { days[i] = days[i].add(1, 'day'); }\n          if (days[i].day() === 6) { days[i] = days[i].subtract(1, 'day'); }\n        }\n      }\n\n      days[i] = days[i].startOf('day');\n    }\n\n    if (!days.length) { return false; }\n    if (days.length === 1) { return days[0]; }\n\n    return days;\n  };\n\n  var keywordMatches = function(str, kw) {\n    var m = [];\n    kw = arrayify(kw);\n\n    for (var i = 0; i < kw.length; i++) {\n      var f = str.match(new RegExp(kw[i], 'gi'));\n      if (f) { m = m.concat(f); }\n    }\n\n    return m;\n  };\n\n  var findHoliday = function(self, holiday, adjust, parse, holidayObj) {\n    var pt = {};\n    var wn = [];\n    var obj = {};\n\n    h = holidayObj || moment.holidays.active;\n\n    if (h.hasOwnProperty(holiday)) {\n      wn.push(holiday);\n    } else if (fk = findKey(holiday, h)) {\n      wn.push(fk);\n    } else {\n      for (var hd in h) {\n        if (!h.hasOwnProperty(hd)) { continue; }\n\n        pt[hd] = keywordMatches(holiday, hd.split(/[\\s,.-]+/).filter(function(w){ return w.length > 2; })).length;\n\n        if (h[hd].keywords_n) {\n          var matchesN = keywordMatches(holiday, h[hd].keywords_n);\n          if (matchesN.length) {\n            pt[hd] = 0;\n            continue;\n          }\n        }\n\n        if (h[hd].keywords_y) {\n          var matchesY = keywordMatches(holiday, h[hd].keywords_y);\n          if (matchesY && matchesY.length === h[hd].keywords_y.length) {\n            pt[hd] += matchesY.length;\n          } else {\n            pt[hd] = 0;\n            continue;\n          }\n        }\n\n        if (h[hd].keywords) {\n          var matches = keywordMatches(holiday, h[hd].keywords);\n          if (matches) {\n            pt[hd] += matches.length;\n          } else {\n            continue;\n          }\n        }\n      }\n\n      //console.log(pt); // Display scores\n\n      for (var w in pt) {\n        if (!pt[w] || !pt.hasOwnProperty(w)) { continue; }\n        if (!wn.length || pt[w] === pt[wn[0]]) { wn.push(w); continue; }\n        if (pt[w] > pt[wn[0]]) { wn = [w]; continue; }\n      }\n    }\n\n    if (!wn.length) { return false; }\n\n    if (parse !== false) {\n      for (var i = 0; i < wn.length; i++) {\n        var d = parseHoliday(self, h[wn[i]].date, adjust);\n        if (d) { obj[wn[i]] = d; }\n      }\n\n      if (Object.keys(obj).length) { return obj; }\n    } else {\n      return wn;\n    }\n\n    return false;\n  };\n\n  var findHolidays = function(self, holidays, adjust, parse, holidayObj) {\n    var h = [];\n    if (parse) { h = {}; }\n\n    holidays = arrayify(holidays);\n    if (!holidayObj) { holidayObj = moment.holidays.active; }\n\n    for (var i = 0; i < holidays.length; i++) {\n      var find = findHoliday(self, holidays[i], adjust, parse, holidayObj);\n\n      if (find) {\n        if (parse) {\n          h = merge(h, find);\n        } else {\n          h = h.concat(find);\n        }\n      }\n    }\n\n    return h;\n  };\n\n  var getAllHolidays = function(self, adjust) {\n    var h = moment.holidays.active;\n    var d = {};\n\n    for (var hd in h) {\n      if (!h.hasOwnProperty(hd)) { continue; }\n      if (td = parseHoliday(self, h[hd].date, adjust)) { d[hd] = td; }\n    }\n\n    return d;\n  };\n\n  var compileRegions = function(locale, regions) {\n    var h = moment.holidays[locale];\n    var o = {};\n\n    if (h) {\n      for (var i = 0; i < regions.length; i++) {\n        var r = regions[i].toLowerCase();\n        var l = moment.holidays[locale + '/' + r];\n        l = {};\n\n        for (var hd in h) {\n          if (!h.hasOwnProperty(hd)) { continue; }\n\n          var y = h[hd].regions || [];\n          var n = h[hd].regions_n || [];\n\n          if (y.length) { y.join().toLowerCase().split(); }\n          if (n.length) { n.join().toLowerCase().split(); }\n\n          if ((!y.length && !n.length) || (y.length && ~y.indexOf(r)) || (n.length && !~n.indexOf(r))) {\n            l[hd] = h[hd];\n          }\n        }\n\n        if (l) { o = merge(o, l); }\n      }\n    }\n\n    if (!Object.keys(o).length) { return false; }\n\n    return o;\n  };\n\n  var getLocale = function(locale) {\n    regions = locale.split('/');\n    locale = regions[0].toLowerCase().replace(' ', '_');\n    regions.shift();\n\n    if (!moment.holidays[locale]) {\n      try {\n        var path = './locale/';\n        if (__dirname.split('/').slice(-1).pop() == 'build') { path = '.' + path; }\n        require(path + locale);\n      } catch(e) { }\n    }\n\n    if (moment.holidays[locale]) {\n      if (regions.length) { return compileRegions(locale, regions); }\n      return moment.holidays[locale];\n    }\n\n    return false;\n  };\n\n  var holidayLoop = function(self, count, forward, adjust) {\n    if (!count) { count = 1; }\n\n    var h = getAllHolidays(self, adjust);\n    var l = moment(self);\n    var y = self.year();\n    var w = [];\n\n    for (var i = 0; i < count; i++) {\n      var d = moment(l);\n\n      while (true) {\n        var b = false;\n\n        if (forward) {\n          d.add(1, 'day');\n        } else {\n          d.subtract(1, 'day');\n        }\n\n        if (d.year() !== y) {\n          h = getAllHolidays(d, adjust);\n          y = d.year();\n        }\n\n        if (!Object.keys(h).length) { b = true; break; }\n\n        for (var hd in h) {\n          if (!h.hasOwnProperty(hd)) { continue; }\n\n          var b2 = false;\n          var ha = arrayify(h[hd]);\n\n          for (var hi = 0; hi < ha.length; hi++) {\n            if (d.isSame(ha[hi], 'day')) {\n              w.push(ha[hi]);\n              l = moment(d);\n              b2 = true;\n              break;\n            }\n          }\n\n          if (b2) { b = true; break; }\n        }\n\n        if (b) { break; }\n      }\n    }\n\n    if (!w.length) { return false; }\n    if (w.length === 1) { return w[0]; }\n\n    return w;\n  };\n\n  var arrayify = function(arr) {\n    if (arr && arr.constructor !== Array) { return [arr]; }\n    return arr;\n  };\n\n  var findKey = function(find, obj) {\n    if (obj.constructor === Object) { obj = Object.keys(obj); }\n    for (var i = 0; i < obj.length; i++) {\n      if (find.toLowerCase() === obj[i].toLowerCase()) { return obj[i]; }\n    }\n    return false;\n  };\n\n  var merge = function(o1, o2) {\n    return Object.assign({}, o1, o2);\n  };\n\n  moment.fn.holiday = function(holidays, adjust) {\n    var h = moment.holidays.active;\n    var d = {};\n    var single = false;\n\n    if (!holidays) {\n      d = getAllHolidays(this, adjust);\n    } else {\n      if (holidays.constructor !== Array) {\n        single = true;\n        holidays = [holidays];\n      }\n\n      for (var i = 0; i < holidays.length; i++) {\n        if (td = findHoliday(this, holidays[i], adjust)) { d = Object.assign({}, d, td); }\n      }\n    }\n\n    var dKeys = Object.keys(d);\n\n    if (!dKeys.length) { return false; }\n    if (dKeys.length === 1 && single) { return d[dKeys[0]]; }\n\n    return d;\n  };\n\n  moment.fn.holidays = function(holidays, adjust) {\n    return this.holiday(holidays, adjust);\n  };\n\n  moment.fn.isHoliday = function(holidays, adjust) {\n    var h, returnTitle, hs = [];\n\n    if (holidays) {\n      holidays = arrayify(holidays);\n      h = this.holiday(holidays, adjust);\n      returnTitle = false;\n    } else {\n      h = getAllHolidays(this, adjust);\n      returnTitle = true;\n    }\n\n    if (!h) { return false; }\n\n    for (var hd in h) {\n      if (!h.hasOwnProperty(hd)) { continue; }\n\n      var ha = arrayify(h[hd]);\n\n      for (var hi = 0; hi < ha.length; hi++) {\n        if (this.isSame(ha[hi], 'day')) {\n          if (returnTitle) {\n            hs.push(hd);\n          } else {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (hs.length) {\n      if (hs.length === 1) { return hs[0]; }\n      return hs;\n    }\n\n    return false;\n  };\n\n  moment.fn.previousHoliday = function(count, adjust) {\n    return holidayLoop(this, count, false, adjust);\n  };\n\n  moment.fn.previousHolidays = function(count, adjust) {\n    return this.previousHoliday(count, adjust);\n  };\n\n  moment.fn.nextHoliday = function(count, adjust) {\n    return holidayLoop(this, count, true, adjust);\n  };\n\n  moment.fn.nextHolidays = function(count, adjust) {\n    return this.nextHoliday(count, adjust);\n  };\n\n  moment.fn.holidaysBetween = function(date, adjust) {\n    if (!date) { date = new Date(); }\n    date = moment(date).subtract(1, 'day');\n\n    var h = getAllHolidays(this, adjust);\n    var d = moment(this);\n    var y = d.year();\n    var w = [];\n\n    for (var i = 0; i < date.diff(this, 'days'); i++) {\n      d.add(1, 'day');\n\n      if (d.year() !== y) {\n        h = getAllHolidays(d, adjust);\n        y = d.year();\n      }\n\n      if (!Object.keys(h).length) { break; }\n\n      for (var hd in h) {\n        var b = false;\n        var ha = arrayify(h[hd]);\n\n        for (var hi = 0; hi < ha.length; hi++) {\n          if (d.isSame(ha[hi], 'day')) {\n            w.push(ha[hi]);\n            b = true;\n            break;\n          }\n        }\n\n        if (b) { break; }\n      }\n    }\n\n    if (!w.length) { return false; }\n\n    return w;\n  };\n\n  moment.holidays = {\n    active: {},\n    active_last: {}\n  };\n\n  moment.modifyHolidays = {\n    set: function(holidays, specifics) {\n      var newH = {};\n\n      if (holidays.constructor === Array) {\n        var hs = [];\n\n        for (var i = 0; i < holidays.length; i++) {\n          var d = findHoliday(this, holidays[i], null, false);\n          if (d) { hs = hs.concat(d); }\n        }\n\n        if (hs.length) {\n          newH = merge(moment.holidays.active);\n\n          for (var hd in newH) {\n            if (!newH.hasOwnProperty(hd)) { continue; }\n            if (!~hs.indexOf(hd)) { delete(newH[hd]); }\n          }\n        }\n      } else if (typeof holidays === 'string') {\n        var locale = getLocale(holidays);\n\n        if (locale) {\n          if (specifics) {\n            var k = findHolidays(this, specifics, false, false, locale);\n            for (var i = 0; i < k.length; i++) { newH[k[i]] = merge(locale[k[i]]); }\n          } else {\n            newH = merge(locale);\n          }\n        }\n      } else {\n        newH = holidays;\n      }\n\n      if ((Object.keys(newH).length || holidays === newH) && !Object.is(moment.holidays.active, newH)) {\n        moment.holidays.active_last = merge(moment.holidays.active);\n        moment.holidays.active = newH;\n      }\n\n      return this;\n    },\n\n    add: function(holidays, specifics) {\n      if (typeof holidays === 'string') {\n        var locale = getLocale(holidays);\n        holidays = {};\n\n        if (locale) {\n          if (specifics) {\n            var k = findHolidays(this, specifics, false, false, locale);\n            for (var i = 0; i < k.length; i++) { holidays[k[i]] = merge(locale[k[i]]); }\n          } else {\n            holidays = locale;\n          }\n        }\n      }\n\n      if (Object.keys(holidays).length) {\n        moment.holidays.active_last = merge(moment.holidays.active);\n        moment.holidays.active = merge(moment.holidays.active, holidays);\n      }\n\n      return this;\n    },\n\n    remove: function(holidays) {\n      holidays = arrayify(holidays);\n\n      var find = findHolidays(this, holidays, false, false);\n      var newH = merge(moment.holidays.active);\n\n      if (find) {\n        for (var i = 0; i < find.length; i++) { delete(newH[find[i]]); }\n      }\n\n      if (!Object.is(moment.holidays.active, newH)) {\n        moment.holidays.active_last = merge(moment.holidays.active);\n        moment.holidays.active = newH;\n      }\n\n      return this;\n    },\n\n    undo: function() {\n      var c = merge(moment.holidays.active);\n      moment.holidays.active = merge(moment.holidays.active_last);\n      moment.holidays.active_last = c;\n      return this;\n    },\n\n    load: function(locales) {\n      locales = arrayify(locales);\n      for (var i = 0; i < locales.length; i++) { getLocale(locales[i]); }\n      return this;\n    },\n\n    extendParser: function(func) {\n      parserExtensions.push(func);\n      return this;\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Argentina\n//! author : NahuelOvejero : https://github.com/NahuelOvejero\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.argentina = {\n    \"Año Nuevo\": {\n      date: '1/1',\n      keywords: ['ano', 'new', 'year']\n    },\n    \"Lunes de Carnival\": {\n      date: 'easter-48',\n      keywords: ['festival']\n    },\n    \"Martes de Carnival\": {\n      date: 'easter-47',\n      keywords: ['festival'],\n    },\n    \"Día de la Memoria por la Verdad y la Justicia\": {\n      date: '3/24',\n    },\n    \"Día del Veterano de Guerra y los Caídos en las Islas Malvinas\": {\n      date: '4/2',\n      keywords: ['caidos']\n    },\n    \"Jueves Santo\" : {\n      date: 'easter-3',\n      keywords: ['festividad', 'cristina']\n    },\n    \"Viernes Santo\": {\n      date: 'easter-2',\n      keywords: ['festividad', 'cristina']\n    },\n    \"Día de Acción por la tolerancia y el respeto entre los pueblos\": {\n      date: '4/24',\n      keywords: ['accion', 'pueblo']\n    },\n    \"Día del Trabajador\": {\n      date: '5/1',\n      keywords: ['labor', 'labour']\n    },\n    \"Día de la Revolución de Mayo\": {\n      date: '5/25',\n      keywords: ['revolucion', 'revolution']\n    },\n    \"Día Paso a la Inmortalidad del Gral. Manual Belgrano\": {\n      date: '6/20',\n      keywords: ['bandera', 'flag']\n    },\n    \"Día de la Independencia\": {\n      date: '7/9',\n      keywords: ['independence']\n    },\n    \"Paso a la Inmortalidad del Gral. José de San Martín\": {\n      date: '8/(1,3)',\n      keywords: ['martin', 'jose', 'saint', 'st[\\\\s\\\\.]']\n    },\n    \"Día del Respeto a la Diversidad Cultural\": {\n      date: '10/(1,2)',\n      keywords: ['christopher', 'columbus', 'culture']\n    },\n    \"Día de la Soberanía Nacional\": {\n      date: '11/(1,4)',\n      keywords: ['soberania', 'sovereignty']\n    },\n    \"Navidad\": {\n      date: '12/25',\n      keywords: ['christmas']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Australia\n//! author : Wlad Paiva : https://github.com/wladiston\n/* regions :\n      ACT : Australian Capital Territory\n      NSW : New South Wales\n      NT  : Northern Territory\n      QLD : Queensland\n      SA  : South Australia\n      TAS : Tasmania\n      VIC : Victoria\n      WA  : Western Australia\n*/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.australia = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords_n: ['eve'],\n    },\n    \"Australia Day\": {\n      date: '1/26'\n    },\n    \"Labour Day - WA\": {\n      date: '3/(1,1)',\n      regions: ['wa']\n    },\n    \"Adelaide Cup\": {\n      date: '3/(1,2)',\n      regions: ['sa']\n    },\n    \"Canberra Day\": {\n      date: '3/(1,2)',\n      regions: ['act']\n    },\n    \"Labour Day - VIC\": {\n      date: '3/(1,2)',\n      regions: ['vic']\n    },\n    \"Eight Hours Day\": {\n      date: '3/(1,2)',\n      regions: ['tas']\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday']\n    },\n    \"Holy Saturday\": {\n      date: 'easter-1',\n      keywords_y: ['holy', 'saturday'],\n      regions: ['act', 'nsw', 'nt', 'qld', 'sa', 'vic']\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n      keywords_y: ['easter'],\n      keywords: ['sunday'],\n      regions: ['act', 'nsw', 'qld', 'vic']\n    },\n    \"Easter Monday\": {\n      date: 'easter+1',\n      keywords_y: ['easter', 'monday']\n    },\n    \"Anzac Day\": {\n      date: '4/25',\n      keywords_y: ['anzac']\n    },\n    \"Labour Day - QLD, NT\": {\n      date: '5/(1,1)',\n      regions: ['qld', 'nt']\n    },\n    \"Reconciliation Day\": {\n      date: '5/(1,[27])',\n      regions: ['act']\n    },\n    \"Western Australia Day\": {\n      date: '6/(1,1)',\n      regions: ['wa']\n    },\n    \"Queens Birthday\": {\n      date: '6/(1,2)',\n      keywords_y: ['queen', 'birthday'],\n      regions: ['act', 'nsw', 'nt', 'sa', 'tas', 'vic']\n    },\n    \"Picnic Day\": {\n      date: '8/(1,1)',\n      keywords_y: ['picnic'],\n      regions: ['nt']\n    },\n    \"Queens Birthday - WA\": {\n      date: '9/(1,-1)',\n      keywords_y: ['queen', 'birthday'],\n      regions: ['wa']\n    },\n    \"Grand Final Eve\": {\n      date: '9/(5,-1)',\n      keywords_y: ['grand', 'final'],\n      regions: ['vic']\n    },\n    \"Labour Day - ACT, NSW, SA\": {\n      date: '10/(1,1)',\n      regions: ['act', 'nsw', 'sa']\n    },\n    \"Queens Birthday - QLD\": {\n      date: '10/(1,1)',\n      keywords_y: ['queen', 'birthday'],\n      regions: ['qld']\n    },\n    \"Melbourne Cup Day\": {\n      date: '11/(5,-1)',\n      keywords_y: ['melbourne', 'cup'],\n      regions: ['vic']\n    },\n    \"Christmas Day\": {\n      date: 'christimasday',\n      keywords: ['christ', 'x-?mas'],\n      keywords_n: ['eve']\n    },\n    \"Boxing Day\": {\n      date: '12/26',\n      keywords: ['box'],\n      regions: ['act', 'nsw', 'nt', 'qld', 'tas', 'vic', 'wa']\n    },\n    \"Proclamation Day\": {\n      date: '12/26',\n      keywords: ['proclamation'],\n      regions: ['sa']\n    }\n  };\n\n  moment.modifyHolidays.extendParser(function(m, date, adjust){\n    if(date === 'christimasday'){\n      var observed;\n      var d = moment(m).month(11).date(25);\n      var wd = d.day();\n      var isSunday = wd === 0;\n      var isSaturday = wd === 6;\n\n      if(isSunday && adjust) {\n        observed = d.add(2, 'days');  // next Tuesday after boxing day\n      } else {\n        if(isSaturday && adjust) {\n          observed = d.add(3, 'days');  // next Tuesday after boxing day\n        } else {\n          observed = d;\n        }\n      }\n\n      return observed.format('M/D');\n    }\n  });\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Canada\n//! author : Kodie Grantham : https://github.com/kodie\n/* regions :\n      AB : Alberta\n      BC : British Columbia\n      MB : Manitoba\n      NB : New Brunswick\n      NL : Newfoundland and Labrador\n      NS : Nova Scotia\n      NT : Northwest Territories\n      NU : Nunavut\n      ON : Ontario\n      PE : Prince Edward Island\n      QC : Quebec\n      SK : Saskatchewan\n*/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.canada = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords_n: ['eve'],\n    },\n    \"Valentine's Day\": {\n      date: '2/14'\n    },\n    \"Islander Day\": {\n      date: '2/(1,2)',\n      keywords_y: ['island'],\n      regions: ['pe']\n    },\n    \"Family Day\": {\n      date: '2/(1,3)',\n      regions: ['ab', 'bc', 'on', 'sk']\n    },\n    \"Louis Riel Day\": {\n      date: '2/(1,3)',\n      regions: ['mb']\n    },\n    \"Saint Patrick's Day\": {\n      date: '3/17',\n      keywords: ['st[\\\\s\\\\.]', 'paddy', 'patty']\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday'],\n      regions_n: ['qc']\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n    },\n    \"Victoria Day\": {\n      date: '5/(1,[-24])',\n      regions_n: ['nb', 'nl', 'ns']\n    },\n    \"Mother's Day\": {\n      date: '5/(0,2)',\n      keywords: ['mom']\n    },\n    \"Father's Day\": {\n      date: '6/(0,3)',\n      keywords: ['dad']\n    },\n    \"Aboriginal Day\": {\n      date: '6/21',\n      regions: ['nt']\n    },\n    \"Saint Jean Baptiste Day\": {\n      date: '6/24',\n      keywords: ['st[\\\\s\\\\.]'],\n      regions: ['qc']\n    },\n    \"Canada Day\": {\n      date: '7/1',\n    },\n    \"Civic Day\": {\n      date: '8/(1,1)',\n      regions: ['ab', 'bc', 'nb', 'nu', 'on', 'sk']\n    },\n    \"Labour Day\": {\n      date: '9/(1,1)',\n      keywords: ['labor']\n    },\n    \"Halloween\": {\n      date: '10/31',\n    },\n    \"Remembrance Day\": {\n      date: '11/11',\n      regions_n: ['mb', 'ns', 'on', 'qc']\n    },\n    \"Thanksgiving Day\": {\n      date: '11/(4,4)',\n      keywords: ['thanks', 'turkey'],\n      keywords_n: ['after'],\n      regions_n: ['nb', 'nl', 'ns']\n    },\n    \"Christmas Day\": {\n      date: '12/25',\n      keywords: ['christ', 'x-?mas'],\n      keywords_n: ['eve']\n    },\n    \"Boxing Day\": {\n      date: '12/26',\n      keywords: ['box'],\n      regions: ['on']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.colombia = {\n    \"Día de los Reyes Magos\": {\n      date: '1/9',\n      keywords: ['reyes magos']\n    },\n    \"Día de San José\": {\n      date: '3/20',\n      keywords: ['Día del hombre']\n    },\n    \"Día del Trabajo\": {\n      date: '4/1',\n    },\n    \"Día de la Ascensión\": {\n      date: '5/29',\n    },\n    \"Corpus Christi\": {\n      date: '6/19',\n      keywords: ['festividad', 'cristiana']\n    },\n    \"Sagrado Corazón\" : {\n      date: '6/26',\n      keywords: ['festividad', 'cristiana']\n    },\n    \"San Pedro y San Pablo\": {\n      date: '7/3',\n      keywords: ['festividad', 'cristiana']\n    },\n    \"Día de la Independencia\": {\n      date: '7/20',\n      keywords: ['bandera', 'independencia Colombia', 'libertad']\n    },\n    \"Batalla de Boyacá\": {\n      date: '8/7',\n      keywords: ['Batalla de Boyaca','Colombia', 'libertad']\n    },\n    \"La asunción de la Virgen \": {\n      date: '8/21',\n      keywords: ['festividad', 'cristiana']\n    },\n    \"Día de la Raza\": {\n      date: '10/16',\n      keywords: ['Raza','abolicion de esclavitud']\n    },\n    \"Todos los Santos \": {\n      date: '11/6',\n      keywords: ['festividad', 'cristiana']\n    }, \n    \"Independencia de Cartagena\":{\n    \tdate: '11/13'\n    },\n    \"Día de la Inmaculada Concepción \": {\n      date: '12/8',\n      keywords: ['festividad', 'cristiana']\n    },\n    \"Día de Navidad \": {\n      date: '12/8',\n      keywords: ['christmas', 'navidad', 'merryxmas']\n   }    \n  };\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Croatia / Hrvatska\n//! author : diomed : https://github.com/diomed\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.croatia = {\n    \"Nova Godina\": {\n      date: '1/1',\n      keywords: ['new', 'year']\n    },\n    \"Bogojavljenje\": {\n      date: '1/6',\n      keywords: ['tri kralja']\n    },\n    \"Uskrs\": {\n      date: 'easter',\n      keywords: ['easter'],\n      keywords_n: ['monday']\n    },\n    \"Uskrsni ponedjeljak\": {\n      date: 'easter+1',\n      keywords: ['uskršnji', 'easter', 'monday']\n    },\n    \"Praznik rada\": {\n      date: '5/1'\n    },\n    \"Tijelovo\": {\n      date: 'easter+60',\n      keywords: ['corpus', 'christi']\n    },\n    \"Dan antifašističke borbe\": {\n      date: '6/22',\n      keywords: ['antifasisticke']\n    },\n    \"Dan državnosti\": {\n      date: '6/25',\n      keywords: ['drzavnost', 'domovinske', 'domovinska']\n    },\n    \"Dan zahvalnosti\": {\n      date: '8/5',\n      keywords: ['domovinske', 'thanksgiving']\n    },\n    \"Velika Gospa\": {\n      date: '8/15'\n    },\n    \"Dan neovisnosti\": {\n      date: '10/8',\n      keywords: ['nezavisnosti', 'independence']\n    },\n    \"Dan svih svetih\": {\n      date: '11/1',\n      keywords: ['svi sveti', 'sesvete', 'sisvete']\n    },\n    \"Božić\": {\n      date: '12/25',\n      keywords: ['bozic', 'christmas']\n    },\n    \"Sveti Stjepan\": {\n      date: '12/26',\n      keywords: ['sv[\\\\s\\\\.]']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Denmark\n//! author : Alexander Køpke : https://github.com/alexanderkopke\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.denmark = {\n    \"Nytårsdag\": {\n      date: '1/1',\n      keywords: ['nytarsdag', 'new', 'years']\n    },\n    \"Skærfredag\": {\n      date: 'easter-2',\n      keywords: ['skaerfredag', 'good', 'friday']\n    },\n    \"Påske\": {\n      date: 'easter',\n      keywords: ['paske', 'easter', 'sunday'],\n    },\n    \"Anden påskedag\": {\n      date: 'easter+1',\n      keywords: ['andenpåskedag', 'andenpaskedag', 'paskedag', 'easter', 'monday']\n    },\n    \"Første maj\": {\n      date: '5/1',\n      keywords: ['førstemaj', 'forstemaj', 'forste', 'maj']\n    },\n    \"Kristi himmelfart\": {\n      date: 'easter+39',\n      kaywords: ['ascension']\n    },\n    \"Pinse\": {\n      date: 'easter+49',\n      keywords: ['pentecost']\n    },\n    \"Anden pinse\": {\n      date: 'easter+50',\n      keywords: ['andenpinsedag', 'pinsedag', 'whit', 'monday']\n    },\n    \"Juleaften\": {\n      date: '12/24',\n      keywords: ['christmas']\n    },\n    \"Anden juledag\": {\n      date: '12/25',\n      keywords: ['andenjuledag'],\n      keywords_y: ['anden']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Easter Related Holidays\n//! author : Kodie Grantham : https://github.com/kodie\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.easter = {\n    \"Ash Wednesday\": {\n      date: 'easter-46'\n    },\n    \"Lent\": {\n      date: 'easter-46|easter-3'\n    },\n    \"Maundy Thursday\": {\n      date: 'easter-3',\n      keywords_y: ['maundy', 'thursday']\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday']\n    },\n    \"Holy Saturday\": {\n      date: 'easter-1',\n      keywords_y: ['holy', 'saturday']\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n      keywords_y: ['easter'],\n      keywords: ['sunday']\n    },\n    \"Easter Monday\": {\n      date: 'easter+1',\n      keywords_y: ['easter', 'monday']\n    },\n    \"Ascension Day\": {\n      date: 'easter+39'\n    },\n    \"Pentecost Sunday\": {\n      date: 'easter+49',\n      keywords_y: ['pentecost'],\n      keywords: ['sunday']\n    },\n    \"Whit Monday\": {\n      date: 'easter+50',\n      keywords_y: ['whit'],\n      keywords: ['monday']\n    },\n    \"Corpus Christi\": {\n      date: 'easter+60',\n      keywords: ['feast']\n    }\n  };\n\n  var easter = function(y) {\n    var c = Math.floor(y / 100);\n    var n = y - 19 * Math.floor(y / 19);\n    var k = Math.floor((c - 17) / 25);\n    var i = c - Math.floor(c / 4) - Math.floor((c - k) / 3) + 19 * n + 15;\n    i = i - 30 * Math.floor((i / 30));\n    i = i - Math.floor(i / 28) * (1 - Math.floor(i / 28) * Math.floor(29 / (i + 1)) * Math.floor((21 - n) / 11));\n    var j = y + Math.floor(y / 4) + i + 2 - c + Math.floor(c / 4);\n    j = j - 7 * Math.floor(j / 7);\n    var l = i - j;\n    var m = 3 + Math.floor((l + 40) / 44);\n    var d = l + 28 - 31 * Math.floor(m / 4);\n    return moment([y, (m - 1), d]);\n  };\n\n  moment.modifyHolidays.extendParser(function(m, date){\n    if (~date.indexOf('easter')) {\n      var dates = date.split('|');\n      var ds = [];\n\n      for (i = 0; i < dates.length; i++) {\n        if (dates[i].substring(0, 6) === 'easter') {\n          var e = easter(m.year());\n\n          if (dates[i].charAt(6) === '-') { e.subtract(dates[i].substring(7), 'days'); }\n          if (dates[i].charAt(6) === '+') { e.add(dates[i].substring(7), 'days'); }\n\n          if (dates.length === 1) { return e; }\n          ds.push(e.format('M/D'));\n        } else {\n          ds.push(dates[i]);\n        }\n      }\n\n      if (ds.length) { return ds.join('|'); }\n    }\n  });\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Finland\n//! author : Kodie Grantham : https://github.com/kodie\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.finland = {\n    \"Uudenvuodenpäivä\": {\n      date: '1/1',\n      keywords: ['uudenvuodenpaiva', 'new', 'year']\n    },\n    \"Loppiainen\": {\n      date: '1/6'\n    },\n    \"Vappu\": {\n      date: '5/1'\n    },\n    \"Juhannuspäivä\": {\n      date: '6/(6,[21])',\n      keywords: ['juhannuspaiva']\n    },\n    \"Pyhäinpäivä\": {\n      date: '11/(6,[1])',\n      keywords: ['pyhainpaiva']\n    },\n    \"Joulupäivä\": {\n      date: '12/25',\n      keywords: ['joulupaiva', 'christmas']\n    },\n    \"Tapaninpäivä\": {\n      date: '12/26',\n      keywords: ['tapaninpaiva']\n    },\n    \"Pitkäperjantai\": {\n      date: 'easter-2',\n      keywords: ['pitkaperjantai', 'good', 'friday']\n    },\n    \"Pääsiäispäivä\": {\n      date: 'easter',\n      keywords: ['paasiaispaiva', 'easter'],\n      keywords_n: ['toinen', 'monday']\n    },\n    \"Toinen Pääsiäispäivä\": {\n      date: 'easter+1',\n      keywords: ['paasiaispaiva', 'easter', 'monday'],\n      keywords_y: ['toinen']\n    },\n    \"Helatorstai\": {\n      date: 'easter+39',\n      keywords: ['ascension']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Germany\n//! author : Kodie Grantham : https://github.com/kodie\n/* regions :\n      BB : Brandenburg\n      BW : Baden-Württemberg\n      BY : Bayern\n      HE : Hessen\n      MV : Mecklenburg-Vorpommern\n      NW : Nordrhein-Westfalen\n      RP : Rheinland-Pfalz\n      SN : Sachsen\n      SL : Saarland\n      ST : Sachsen-Anhalt\n      TH : Thüringen\n*/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.germany = {\n    \"Neujahrstag\": {\n      date: '1/1',\n      keywords: ['new', 'year']\n    },\n    \"Karfreitag\": {\n      date: 'easter-2',\n      keywords: ['good', 'friday']\n    },\n    \"Ostersonntag\": {\n      date: 'easter',\n      keywords: ['easter'],\n      keywords_n: ['monday'],\n      regions: ['bb']\n    },\n    \"Ostermontag\": {\n      date: 'easter+1',\n      keywords: ['easter', 'monday']\n    },\n    \"Heilige Drei Könige\": {\n      date: '1/6',\n      keywords: ['konige'],\n      regions: ['bw', 'by', 'st']\n    },\n    \"Maifeiertag\": {\n      date: '5/1'\n    },\n    \"Christi Himmelfahrt\": {\n      date: 'easter+39',\n      kaywords: ['ascension']\n    },\n    \"Pfingstsonntag\": {\n      date: 'easter+49',\n      keywords: ['pentecost'],\n      regions: ['bb']\n    },\n    \"Pfingstmontag\": {\n      date: 'easter+50',\n      keywords: ['whit', 'monday']\n    },\n    \"Fronleichnam\": {\n      date: 'easter+60',\n      keywords: ['corpus', 'christi'],\n      regions: ['bw', 'by', 'he', 'nw', 'rp', 'sl']\n    },\n    \"Mariä Himmelfahrt\": {\n      date: '8/15',\n      keywords: ['maria'],\n      regions: ['sl']\n    },\n    \"Tag der deutschen Einheit\": {\n      date: '10/3'\n    },\n    \"Reformationstag\": {\n      date: '10/31',\n      regions: ['bb', 'mv', 'sn', 'st', 'th']\n    },\n    \"Allerheiligen\": {\n      date: '11/1',\n      regions: ['bw', 'by', 'nw', 'rp', 'sl']\n    },\n    \"Buß- und Bettag\": {\n      date: '11/(3,[17])',\n      keywords: ['bub'],\n      regions: ['sn']\n    },\n    \"Weihnachten\": {\n      date: '12/24',\n      keywords: ['christmas']\n    },\n    \"Zweiter Weihnachtsfeiertag\": {\n      date: '12/26',\n      keywords_y: ['zweiter']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Ghana\n//! author : Emmanuel Zidafamor : https://github.com/e-zidaf\n/* Cities :\n       Accra\n       Kumasi\n       Tamale\n       Secondi-Takoradi\n       Sunyani\n       Cape-Coast\n       Bayelsa\n       Obuasi\n       Teshie\n       Tema\n       Koforidua\n*/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.ghana = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords: ['New Year'],\n    },\n    \"New Year's Holiday\":{\n        date: '1/2',\n        keywords: ['Public Holiday'],\n    },\n    \"Valentine's Day\": {\n      date: '2/14'\n    },\n    \"Independence Day\": {\n      date: '3/6',\n      keywords: ['Independence'],\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday'],\n      regions_n: ['qc']\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n    },\n//! Monday's precceding Easter Sundays\n    \"Easter Monday\": {\n        date: 'easter-3',\n        keywords: ['easter monday'],\n    },\n    \"African Unity Day\": {\n      date: '5/25',\n      keywords: ['unity day'],\n    },\n    \"Eid ul-Fitr\": {\n      date: '6/26',\n      keywords: ['end of ramadan'],\n    },\n    \"Republic Day\": {\n      date: '7/3',\n      keywords: ['ghana republic'],\n    },\n    \"Eidul-Adha\": {\n      date: '9/1',\n      keywords: ['Eid'],\n    },\n    \"Founders Day\": {\n      date: '9/21',\n      keywords: ['birthday of Ghana first president, Kwame Nkrumah'],\n    },\n    \"Farmer's Day\": {\n      date: '12/1',\n      keywords: ['farmers day, first friday of december'],\n    },\n    \"Christmas Day\": {\n      date: '12/25',\n      keywords: ['christ', 'x-?mas'],\n      keywords_n: ['eve']\n    },\n    \"Boxing Day\": {\n      date: '12/26',\n      keywords: ['box'],\n      regions: ['on']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : India\n//! author : wonder2991 : https://github.com/wonder2991\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.india = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords: ['naya', 'saal']\n    },\n    \"Republic Day\": {\n      date: '1/26',\n      keywords: ['ganatantr']\n    },\n    \"Mahavir Jayanti\": {\n      date: '4/9',\n      keywords: ['birthday']\n    },\n    \"May Day\": {\n      date: '5/1',\n      keywords: ['labour']\n    },\n    \"Independence Day\": {\n      date: '8/15',\n      keywords: ['svatantrata']\n    },\n    \"Gandhi Jayanti\": {\n      date: '10/02',\n      keywords: ['birthday']\n    },\n    \"Christmas Day\": {\n      date: '12/25',\n      keywords: ['christ']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Japan\n//! author : garroadran : https://github.com/garroadran/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.japan = {\n    \"Gantan\": {\n      date: '1/1',\n      keywords: ['new', 'year']\n    },\n    \"Seijin no hi\": {\n      date: '1/(1,2)',\n      keywords: ['coming', 'age']\n    },\n    \"Kenkoku kinen no hi\": {\n      date: '2/11',\n      keywords: ['national', 'foundation'],\n    },\n    \"Shunbun no hi\": {\n      date: '3/20',\n      keywords: ['vernal', 'equinox']\n    },\n    \"Showa no hi\": {\n      date: '4/29',\n      keywords: ['emperor']\n    },\n    \"Kenpou kinenbi\" : {\n      date: '5/3',\n      keywords: ['constitution', 'memorial']\n    },\n    \"Midori no hi\": {\n      date: '5/4',\n      keywords: ['green', 'greenery']\n    },\n    \"Kodomo no hi\": {\n      date: '5/5',\n      keywords: ['kids', 'children']\n    },\n    \"Umi no hi\": {\n      date: '7/(1,3)',\n      keywords: ['marine', 'ocean', 'sea']\n    },\n    \"Yama no hi\": {\n      date: '8/11',\n      keywords: ['mountain']\n    },\n    \"Keiro no hi\": {\n      date: '9/(1,3)',\n      keywords: ['respect', 'aged', 'seniors']\n    },\n    \"Shubun no hi\": {\n      date: '9/23',\n      keywords: ['autumn', 'fall', 'autumnal', 'equinox']\n    },\n    \"Taiiku no hi\": {\n      date: '10/(1,2)',\n      keywords: ['health', 'sports']\n    },\n    \"Bunka no hi\": {\n      date: '11/3',\n      keywords: ['culture']\n    },\n    \"Rodo kansha no hi\": {\n      date: '11/23',\n      keywords: ['labor', 'appreciation']\n    },\n    \"Tennou tanjoubi\": {\n      date: '12/23',\n      keywords: ['emperor', 'birthday']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Nigeria\n//! author : Emmanuel Zidafamor : https://github.com/e-zidaf\n/* States :\n       Abia\n       Abuja - FCT\n       Adamawa\n       Akwa Ibom \n       Anambra\n       Bauchi\n       Bayelsa\n       Benue\n       Borno\n       Cross River\n       Delta\n       Ebonyi\n       Edo\n       Ekiti\n       Enugu\n       Gombe\n       Imo\n       Jigawa\n       Kaduna\n       Kano\n       Katsina\n       Kebbi\n       Kogi\n       Kwara\n       Lagos\n       Nasarawa\n       Niger\n       Ogun\n       Ondo\n       Osun\n       Oyo\n       Plateau\n       Rivers\n       Sokoto\n       Taraba\n       Yobe\n       Zamfara\n*/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.nigeria = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords: ['New Year'],\n    },\n    \"New Year's Holiday\":{\n        date: '1/2',\n        keywords: ['Public Holiday'],\n    },\n    \"Valentine's Day\": {\n      date: '2/14'\n    },\n    \"Women's Day\": {\n        date: '3/8',\n        keywords: ['womens day'],\n    },\n    \"Dr. Samuel Memorial Day\": {\n        date: '3/17',\n        keywords_y: ['Samuel Ogbemudia'],\n        regions: ['Edo']\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday'],\n      regions_n: ['qc']\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n    },\n//! Monday's precceding Easter Sundays\n    \"Easter Monday\": {\n        date: 'easter-3',\n        keywords: ['easter monday'],\n    },\n    \"Worker's Day\": {\n      date: '5/1',\n      keywords: ['workers'],\n    },\n    \"Children's Day\": {\n      date: '5/27',\n      keywords: ['children'],\n    },\n    \"Democracy Day\": {\n      date: '5/29',\n      keywords: ['democracy'],\n    },\n     \"Mother's Day\": {\n      date: '5/(0,2)',\n      keywords: ['mom']\n    },\n    \"Father's Day\": {\n      date: '6/(0,3)',\n      keywords: ['dad']\n    },\n    \"Eid-el-fitri Sallah\": {\n      date: '6/25',\n      keywords: ['Eid'],\n    },\n    \"Sallah Holiday\": {\n      date: '6/26',\n      keywords: ['sallah'],\n    },\n    \"Sallah Holidays\": {\n      date: '6/27',\n      keywords: ['Eid sallah'],\n    },\n    \"Id el Kabir\": {\n      date: '9/1',\n      keywords: ['Eid'],\n    },\n    \"Independence Day\": {\n      date: '10/1',\n      keywords: ['National Independence'],\n    },\n    \"Christmas Day\": {\n      date: '12/25',\n      keywords: ['christ', 'x-?mas'],\n      keywords_n: ['eve']\n    },\n    \"Boxing Day\": {\n      date: '12/26',\n      keywords: ['box'],\n      regions: ['on']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);","//! moment-holiday.js locale configuration\n//! locale : Russa\n//! author : Vasilii Vakhtin : https://github.com/Vasil11\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.russia = {\n    \"New Year and Christmas Holidays\": {\n      date: '1/1 | 1/8',\n      keywords: ['new', 'year', 'christmas']\n    },\n    \"Defender's Day\": {\n      date: '2/23',\n      keywords: ['defender\\'s day', '23 of February']\n    },\n    \"Women's Day\": {\n      date: '3/8',\n      keywords: ['women\\'s day', '8 of March']\n    },\n    \"May Day\": {\n      date: '5/1',\n      keywords: ['may day', 'Labour', 'spring']\n    },\n    \"Victory Day\": {\n      date: '5/9',\n      keywords: ['victory day']\n    },\n    \"Russia Day\": {\n      date: '6/12',\n      keywords: ['russia day']\n    },\n    \"National Unity Day\": {\n      date: '11/4',\n      keywords: ['national unity day']\n    },\n    \"New Year\": {\n    date: '12/31',\n    keywords: ['new', 'year']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Switzerland\n//! author : Kodie Grantham : https://github.com/kodie\n/* regions :\n      AG : Aargau\n      AI : Appenzell Innerrhoden\n      AR : Appenzell Ausserrhoden\n      BE : Bern\n      BL : Basel-Landschaft\n      BS : Basel-Stadt\n      FR : Freiburg\n      GE : Genf\n      GL : Glarus\n      GR : Graubünden\n      JU : Jura\n      LU : Luzern\n      NE : Neuenburg\n      NW : Nidwalden\n      OW : Obwalden\n      SG : St. Gallen\n      SH : Schaffhausen\n      SO : Solothurn\n      SZ : Schwyz\n      TG : Thurgau\n      TI : Tessin\n      UR : Uri\n      VD : Waadt\n      VS : Wallis\n      ZG : Zug\n      ZH : Zürich\n*/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.switzerland = {\n    \"Neujahrstag\": {\n      date: '1/1',\n      keywords: ['new', 'year']\n    },\n    \"Berchtoldstag\": {\n      date: '1/2',\n      keywords: ['berchtold'],\n      regions_n: ['ai', 'ar', 'bl', 'bs', 'ge', 'gr', 'sz', 'ti', 'ur']\n    },\n    \"Dreikönigstag\": {\n      date: '1/6',\n      keywords: ['epiphany', 'konige'],\n      regions: ['sz', 'ti', 'ur']\n    },\n    \"Ausrufung Republik Neuenburg\": {\n      date: '3/1',\n      keywords: ['establishment', 'republic', 'neuchatel'],\n      regions: ['ne']\n    },\n    \"Josephstag\": {\n      date: '3/19',\n      keywords: ['joseph'],\n      regions: ['nw', 'sz', 'ti', 'ur', 'vs']\n    },\n    \"Karfreitag\": {\n      date: 'easter-2',\n      keywords: ['good', 'friday'],\n      regions_n: ['ti', 'vs']\n    },\n    \"Ostersonntag\": {\n      date: 'easter',\n      keywords: ['easter'],\n      keywords_n: ['monday']\n    },\n    \"Ostermontag\": {\n      date: 'easter+1',\n      keywords: ['easter', 'monday'],\n      regions_n: ['ne']\n    },\n    \"Näfelser Fahrt\": {\n      date: '4/(4,1)',\n      keywords: ['nafels', 'fahrt'],\n      regions: ['gl']\n    },\n    \"Tag der Arbeit\": {\n      date: '5/1',\n      keywords: ['labor'],\n      regions: ['ag', 'bl', 'bs', 'ju', 'ne', 'sh', 'so', 'tg', 'ti', 'zh']\n    },\n    \"Auffahrt\": {\n      date: 'easter+39',\n      keywords: ['ascension', 'christi', 'himmelfahrt']\n    },\n    \"Pfingstsonntag\": {\n      date: 'easter+49',\n      keywords: ['pentecost']\n    },\n    \"Pfingstmontag\": {\n      date: 'easter+50',\n      keywords: ['whit', 'monday'],\n      regions_n: ['ne']\n    },\n    \"Fronleichnam\": {\n      date: 'easter+60',\n      keywords: ['corpus', 'christi'],\n      regions_n: ['ar', 'be', 'bl', 'bs', 'ge', 'gl', 'gr', 'sg', 'sh', 'tg', 'vd', 'zh']\n    },\n    \"Unabhängigkeitsfest Jura\": {\n      date: '6/23',\n      keywords: ['independence', 'jura'],\n      regions: ['ju']\n    },\n    \"St. Peter und Paul\": {\n      date: '6/29',\n      keywords: ['st[\\\\s\\\\.]', 'peter', 'paul'],\n      regions: ['ti']\n    },\n    \"Bundesfeiertag\": {\n      date: '8/1',\n      keywords: ['national', 'holiday']\n    },\n    \"Mariä Himmelfahrt\": {\n      date: '8/15',\n      keywords: ['assumption', 'maria'],\n      regions: ['ag', 'ai', 'fr', 'ju', 'lu', 'nw', 'ow', 'so', 'sz', 'ti', 'ur', 'vs', 'zg']\n    },\n    \"Genfer Bettag\": {\n      date: '9/(4,[-11])',\n      keywords: ['repentance'],\n      keywords_y: ['geneva'],\n      keywords_n: ['federal', 'monday'],\n      regions: ['ge']\n    },\n    \"Eidg. Dank-, Buss- und Bettag\": {\n      date: '9/(0,3)',\n      keywords: ['repentance'],\n      keywords_y: ['federal'],\n      keywords_n: ['geneva', 'monday'],\n      regions: ['vd']\n    },\n    \"Bettagsmontag\": {\n      date: '9/(1,[-22])',\n      keywords: ['repentance'],\n      keywords_y: ['monday'],\n      keywords_n: ['federal', 'geneva'],\n      regions: ['vd']\n    },\n    \"Mauritiustag\": {\n      date: '9/22',\n      keywords: ['maurice'],\n      regions: ['ai']\n    },\n    \"Bruderklausenfest\": {\n      date: '9/25',\n      keywords: ['brother', 'klaus'],\n      regions: ['ow']\n    },\n    \"Allerheiligen\": {\n      date: '11/1',\n      keywords: ['all', 'saints'],\n      regions_n: ['ar', 'be', 'bl', 'bs', 'ge', 'gr', 'ne', 'sh', 'tg', 'vd', 'zh']\n    },\n    \"Mariä Empfängnis\": {\n      date: '12/8',\n      keywords: ['immaculate', 'conception'],\n      regions: ['ag', 'ai', 'fr', 'lu', 'nw', 'ow', 'sz', 'ti', 'ur', 'vs', 'zg']\n    },\n    \"Weihnachtstag\": {\n      date: '12/25',\n      keywords: ['christ', 'x-?mas']\n    },\n    \"Stephanstag\": {\n      date: '12/26',\n      keywords: ['boxing', 'box'],\n      regions_n: ['ge', 'ju', 'vd']\n    },\n    \"Wiederherstellung Republik Genf\": {\n      date: '12/31',\n      keywords: ['restoration', 'republic', 'geneva'],\n      regions: ['ge']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : UK\n//! author : Kodie Grantham : https://github.com/kodie\n//! locale-author: DMCooper : https://github.com/SilentGamelan\n//\n/* regions :\n      EN : England\n      SL : Scotland\n      WL : Wales\n      NI : Northern Island\n*/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.united_kingdom = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords_n: ['eve']\n    },\n    \"Saint David's Day\": {\n      date: '3/1',\n      keywords:['David', 'st[\\\\s\\\\.]'],\n      regions: ['WL']\n    },\n    \"Saint Patrick's Day\": {\n      date: '3/17',\n      keywords:['paddy', 'st[\\\\s\\\\.]'],\n      regions: ['NI']\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday'],\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n      keywords_y: ['easter'],\n      keywords:['sunday']\n    },\n    \"Easter Monday\": {\n      date: 'easter+1)',\n      keywords_y: ['easter'],\n      keywords: ['monday'],\n      regions: ['EN', 'NI', 'WL']\n    },\n    \"Mothering Sunday\": {\n      date: 'easter-21',\n      keywords_y:['mother'],\n      keywords: ['sunday', 'day']\n    },\n    \"Saint George's Day\": {\n      date: '4/24',\n      keywords: ['st[\\\\s\\\\.]', 'george'],\n      regions: ['EN']\n    },\n    \"May Day\": {\n      date: '5/1'\n    },\n    \"Early May Bank Holiday\" : {\n      date: '5/(1,1)',\n      keywords_y: ['may'],\n      keywords: ['spring', 'early', 'may']\n    },\n    \"Spring Bank Holiday\": {\n      date: '5/(1,-1)',\n      keywords: ['bank', 'spring', 'late']\n    },\n    \"Queen's Birthday\": {\n      date: '6/(6,2)',\n      keywords: ['queen']\n    },\n   \"Father's Day\": {\n      date: '6/(0,3)',\n      keywords: ['dad', 'father']\n    },\n    \"Battle of the Boyne\": {\n      date: '6/12',\n      keywords: ['battle', 'boyne'],\n      regions: ['NI']\n    },\n    \"Summer Bank Holiday (Scotland)\": {\n      date: '8/(1,1)',\n      keywords: ['summer', 'bank'],\n      regions: ['SC']\n    },\n    \"Summer Bank Holiday\": {\n      date: '8/(1,-1)',\n      keywords: ['summer', 'bank'],\n      keywords_n: ['scottish', 'scotland'],\n      regions: ['EN', 'WL', 'NI']\n    },\n    \"Halloween\": {\n      date: '10/31',\n    },\n    \"Guy Fawks Day\": {\n      date: '10/5',\n      keywords: ['guy', 'fawks', 'bonfire']\n    },\n    \"Remembrance Day\": {\n      date: '1/(0,2)',\n      keywords: ['poppy', 'remembrance']\n    },\n    \"Saint Andrews Day\": {\n      date: '10/30',\n      keywords: ['andrew', 'saint', 'st[\\\\s\\\\.]'],\n      regions: ['SL']\n    },\n    \"Christmas Day\": {\n      date: '12/25',\n      keywords: ['christ', 'x-?mas'],\n      keywords_n: ['eve']\n    },\n    \"Boxing Day\": {\n      date: '12/26',\n      keywords: ['box']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : United States\n//! author : Kodie Grantham : https://github.com/kodie\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.united_states = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords_n: ['eve']\n    },\n    \"Martin Luther King Jr. Day\": {\n      date: '1/(1,3)',\n      keywords: ['mlk']\n    },\n    \"Valentine's Day\": {\n      date: '2/14'\n    },\n    \"Washington's Birthday\": {\n      date: '2/(1,3)',\n      keywords: ['george', 'president', 'day']\n    },\n    \"Saint Patrick's Day\": {\n      date: '3/17',\n      keywords: ['st[\\\\s\\\\.]', 'paddy', 'patty']\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday']\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n      keywords_y: ['easter'],\n      keywords: ['sunday']\n    },\n    \"Memorial Day\": {\n      date: '5/(1,-1)'\n    },\n    \"Mother's Day\": {\n      date: '5/(0,2)',\n      keywords: ['mom']\n    },\n    \"Father's Day\": {\n      date: '6/(0,3)',\n      keywords: ['dad']\n    },\n    \"Independence Day\": {\n      date: '7/4',\n      keywords: ['4th', 'fourth', 'july']\n    },\n    \"Labor Day\": {\n      date: '9/(1,1)',\n      keywords: ['labour']\n    },\n    \"Columbus Day\": {\n      date: '10/(1,2)',\n      keywords: ['christopher']\n    },\n    \"Halloween\": {\n      date: '10/31'\n    },\n    \"Veteran's Day\": {\n      date: '11/11',\n      keywords: ['vet']\n    },\n    \"Thanksgiving Day\": {\n      date: '11/(4,4)',\n      keywords: ['thanks', 'turkey'],\n      keywords_n: ['after']\n    },\n    \"Day after Thanksgiving\": {\n      date: '11/(5,4)',\n      keywords: ['thanks', 'turkey'],\n      keywords_y: ['after']\n    },\n    \"Christmas Eve\": {\n      date: '12/24',\n      keywords: ['christ', 'x-?mas'],\n      keywords_y: ['eve']\n    },\n    \"Christmas Day\": {\n      date: '12/25',\n      keywords: ['christ', 'x-?mas'],\n      keywords_n: ['eve']\n    },\n    \"New Year's Eve\": {\n      date: '12/31',\n      keywords_y: ['year', 'eve']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n"]}